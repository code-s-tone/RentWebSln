@model MemberPersonDataViewModel

@{
    ViewBag.Title = "MemberCenter";
}

<div class="member-center-container-outsidestyle">
    <div class="member-center-container">
        <div class="member-display-block">
            <!-- BS新版 -->
            <!--欄位區-->
            @*<h2 class="member-display-title">訂單查詢</h2>*@

            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link select-hover active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">個人資料</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link select-hover" id="account-tab" data-bs-toggle="tab" data-bs-target="#account" type="button" role="tab" aria-controls="account" aria-selected="false">帳號管理</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link select-hover" id="profile-tab" data-bs-toggle="tab" data-bs-target="#order-search" type="button" role="tab" aria-controls="order-search" aria-selected="false">訂單查詢</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link select-hover" id="contact-tab" data-bs-toggle="tab" data-bs-target="#car-order" type="button" role="tab" aria-controls="car-order" aria-selected="false">待購清單</button>
                </li>
            </ul>


            @*原始表單區塊*@

            <div class="tab-content" id="myTabContent">
                <!-- 個人資料 -->
                <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <div class="member-display-person-detail member-display-group">

                        <!--這是換頭像的東西-->
                        <input class="efg" type="file" id="file2">
                        <span class="member-display-header member-display-new-email-context my-3">頭像</span>
                        <div class="member-display-name-container member-display-item d-flex position-relative" style="width:100px;height:100px">
                            <img style="width:100px;height:100px" class="border  rounded-0 shadow-sm Profile2" src="" />
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary"><i class="fas fa-camera d-block " style="color:aliceblue" type="file" name="file" id="file"></i> <span class="visually-hidden">unread messages</span></span>
                        </div>


                        @ViewBag.returnPerson
                        <!--個人資料Form-->
                        @using (Html.BeginForm("MemberPerson", "Member", FormMethod.Post))
                        {
                            <!--姓氏-->
                            <div class="member-display-name-container member-display-item">
                                <div class="member-display-header">姓氏與名字</div>
                                <div class="member-display-name-input-box-first">
                                    @Html.EditorFor(m => m.MemberName, new { @htmlAttributes = new { @class = "member-display-lastname member-person-input", @placeholder = "姓名" } })
                                </div>
                            </div>
                            <div class="member-display-born-container member-display-item">
                                <div class="member-display-header">生日</div>
                                <div class="member-display-birthday-group">
                                    <div class="member-display-name-input-box-first">
                                        @Html.EditorFor(m => m.MemberYear, new { @htmlAttributes = new { @class = "member-display-year member-person-input", @placeholder = "年" } })
                                    </div>
                                    <div class="member-display-name-input-box-first">
                                        @Html.EditorFor(m => m.MemberMonth, new { @htmlAttributes = new { @class = "member-display-month member-person-input", @placeholder = "月份" } })
                                    </div>
                                    <div class="member-display-name-input-box-first">
                                        @Html.EditorFor(m => m.MemberDay, new { @htmlAttributes = new { @class = "member-display-date member-person-input", @placeholder = "日期" } })
                                    </div>
                                </div>
                            </div>

                            <!--性別 戰略性暫時移除-->
                            <!--
                            <div class="member-display-radio-container member-display-item">
                                <div class="member-display-header">性別</div>
                                <div class="member-display-gender-textContent">男</div>
                                <div class="radio-men member-display-person-style">
                                    <input type="radio" name="gender" id="gender">
                                    <label class="member-display-header" for="text">男</label>
                                    <i class="fas fa-male"></i>
                                </div>
                                <div class="radio-women member-display-person-style">
                                    <input type="radio" name="gender" id="gender">
                                    <label class="member-display-header" for="text">女</label>
                                    <i class="fas fa-female"></i>
                                </div>
                            </div>
                                -->

                            <!--電話-->
                            <div class="member-display-phone-container member-display-item">
                                <div class="member-display-header">電話號碼</div>
                                <div class="member-display-phone-group">
                                    <div class="member-display-name-input-box-first">
                                        <input type="text" class="member-display-block-num" name="block" value="+886" placeholder="區域碼" data-max="10">
                                    </div>
                                    <div class="member-display-name-input-box-last">
                                        @Html.EditorFor(m => m.MemberPhone, new { @htmlAttributes = new { @class = "member-display-num member-person-input", @placeholder = "電話" } })
                                    </div>
                                </div>
                            </div>

                            <!--喜好門市-->
                            <div class="member-display-shop-container member-display-item">
                                <div class="member-display-shop-group">
                                    <div class="member-display-header">喜好門市</div>
                                    <select class="member-display-shop" name="shop">
                                        <option value="門市選項">門市選項</option>
                                        @*@foreach (var item in Model.MemberBranchName)
                                            {
                                                <option value="@item">@item</option>
                                            }*@
                                    </select>
                                </div>
                            </div>

                            <div class="member-display-button-groups">
                                <div class="member-display-shop-container">
                                    <div class="member-display-button-group member-display-cancel-deit">
                                        <button type="button" class="member-display-button-item memberperson-cancel-edit">取消修改</button>
                                    </div>
                                    <div class="member-display-button-group">
                                        <button type="button" class="member-display-button-item memberperson-button-edit">修改</button>
                                    </div>
                                </div>
                                <div class="member-display-shop-container">
                                    <div class="member-display-button-group">
                                        <button type="submit" class="member-display-button-item memberperson-button-save">儲存</button>
                                    </div>
                                </div>
                            </div>

                        }


                    </div>
                </div>



                <!--信箱密碼Form-->
                <div class="tab-pane fade" id="account" role="tabpanel" aria-labelledby="profile-tab">
                    <div class="member-display-person-detail member-display-account-detail member-display-group">
                        @ViewBag.returnEmail
                        @using (Html.BeginForm("MemberEmail", "Member", FormMethod.Post))
                        {
                            <div class="member-display-name-container member-display-item">
                                <div class="member-display-header member-display-new-email-context">電子信箱地址</div>
                                <div class="member-display-service-email">
                                    @Html.DisplayFor(m => m.MemberEmail, new { htmlAttributes = new { @class = "border border-white rounded" } })
                                </div>
                            </div>

                            <div class="member-display-name-container member-display-item member-changeEmail-item">
                                <div class="member-display-new-email-context">
                                    <div class="member-display-header">請輸入新電子信箱地址</div>

                                </div>
                                <div class="member-display-name-input-box-last">
                                    <div class="member-display-email-container member-email-clear">
                                        @Html.EditorFor(m => m.MemberEmail, new { @htmlAttributes = new { @class = "member-display-new-email member-email-clear", @placeholder = "新電子信箱" } })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.MemberEmail, "", new { @class = "text-danger" })
                            </div>
                            <div class="member-display-name-container member-display-item member-changeEmail-item">
                                <div class="member-display-new-email-context">
                                    <div class="member-display-header">請再輸入新電子信箱地址</div>

                                </div>
                                <div class="member-display-name-input-box-last ">
                                    <div class="member-display-email-container member-email-clear">
                                        @Html.EditorFor(m => m.ComfirMemberEmail, new { htmlAttributes = new { @class = "member-display-doublecheck-email member-email-clear", @placeholder = "再輸入一次新電子信箱" } })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.ComfirMemberEmail, "", new { @class = "text-danger" })
                            </div>
                            <div class="member-display-button-groups">
                                <div class="member-display-shop-container">
                                    <div class="member-display-button-group member-display-cancel-deit">
                                        <button type="button" class="member-display-button-item memberemail-cancel-edit">取消修改</button>
                                    </div>
                                    <div class="member-display-button-group">
                                        <button type="button" class="member-display-button-item memberemail-button-edit">修改信箱</button>
                                    </div>
                                </div>
                                <div class="member-display-shop-container">
                                    <div class="member-display-button-group">
                                        <button type="submit" class="member-display-button-item memberemail-button-save">儲存變更</button>
                                    </div>
                                </div>
                            </div>
                        }

                        <!--變更密碼Form-->
                        @ViewBag.returnPassword
                        @using (Html.BeginForm("MemberPassword", "Member", FormMethod.Post))
                        {
                            <div class="member-display-name-container member-display-item">
                                <div class="member-display-header member-display-new-email-context">修改密碼</div>

                            </div>
                            <div class="member-display-name-container member-display-item member-changePassword-item">
                                <div class="member-display-new-email-context">
                                    <div class="member-display-header">請輸入新密碼</div>

                                </div>
                                <div class="member-display-name-input-box-last">
                                    <div class="member-display-email-container">
                                        @Html.EditorFor(m => m.MemberPasswordHash, new { htmlAttributes = new { @class = "member-display-new-email" } })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.MemberPasswordHash, "", new { @class = "text-danger" })
                            </div>
                            <div class="member-display-name-container member-display-item member-changePassword-item">
                                <div class="member-display-new-email-context">
                                    <div class="member-display-header">再輸入新密碼</div>

                                </div>
                                <div class="member-display-name-input-box-last">
                                    <div class="member-display-email-container">
                                        @Html.EditorFor(m => m.ComfigMemberPasswordHash, new { htmlAttributes = new { @class = "member-display-new-email" } })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.ComfigMemberPasswordHash, "", new { @class = "text-danger" })
                            </div>

                            <div class="member-display-button-groups">
                                <div class="member-display-shop-container">
                                    <div class="member-display-button-group member-display-cancel-deit">
                                        <button type="button" class="member-display-button-item memberpassword-cancel-edit">取消修改</button>
                                    </div>
                                    <div class="member-display-button-group">
                                        <button type="button" class="member-display-button-item memberpassword-button-edit">修改密碼</button>
                                    </div>
                                </div>
                                <div class="member-display-shop-container">
                                    <div class="member-display-button-group">
                                        <button type="submit" class="member-display-button-item memberpassword-button-save">儲存變更</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- 歷史訂單 -->
                @*@using (Html.BeginForm("MemberCenter", "Member", FormMethod.Post))
                    {

                    }*@
                <div class="tab-pane fade" id="order-search" role="tabpanel" aria-labelledby="contact-tab">
                    <div class="member-display-title member-display-order-title">
                        <span class="member-display-order-item">訂單編號</span>
                        <span class="member-display-order-item">建立訂單日期</span>
                        <span class="member-display-order-item">交易狀態</span>
                        <span class="member-display-order-item">連結按鈕</span>
                        @*<span class="member-display-order-item">查看明細</span>*@

                        @*<span class="member-display-order-item"></span>*@
                        @*<span class="member-display-order-item member-display-order-item-show">內容</span>*@
                    </div>
                    @foreach (var order in Model.MemberOrders)
                    {
                        <div class="member-display-order-detail-container">
                            <div class="member-display-title member-display-order-detail">
                                <span class="member-display-order-item member-display-order-show">@order.OrderID</span>

                                <span class="member-display-order-item member-display-order-show">110/09/13</span>

                                <span class="member-display-order-item member-display-order-show">未付款 </span>

                                <span class="member-display-order-item member-display-order-show">
                                    <button class="btn btn-primary"> 前往付款 </button>
                                    <button class="btn btn-primary"> 取消訂單 </button>
                                </span>

                                <span class="member-display-order-item member-display-order-item-show-dynamic-button">
                                    查看明細+
                                </span>

                            </div>


                            @*<span class="member-display-order-itemmember-display-order-day">
                                    @item.RentDate 天
                                </span>*@

                            @*<span class="member-display-order-item member-display-order-dynamic-total">
                                    NT$@item.TotalAmount
                                </span>*@

                            @*<span class="member-display-order-item member-display-order-day">
                                    @item.StartDate.AddYears(-1911).ToString("yyy/MM/dd")
                                </span>*@



                        <div class="member-display-order-detail-list">
                            @* ============================================================================================ *@

                            <span class="member-display-order-item detail-title">商品圖片</span>
                            <span class="member-display-order-item detail-title">商品名稱</span>
                            <span class="member-display-order-item detail-title">開始日</span>
                            <span class="member-display-order-item detail-title">歸還日</span>
                            <span class="member-display-order-item detail-title">單價</span>
                            <span class="member-display-order-item detail-title">天數</span>
                            <span class="member-display-order-item detail-title">小計</span>

                            @* ============================================================================================ *@
                            @foreach (var orderDetail in order.OrderDetails)
                            {
                                <span class="detail-item">
                                    圖片URL
                                </span>

                                <span class="detail-item">
                                    @orderDetail.ProductName
                                </span>

                                <span class="detail-item">
                                    110/09/13
                                </span>

                                <span class="detail-item">
                                    110/09/15
                                </span>

                                <span class="detail-item">
                                    10
                                </span>

                                <span class="detail-item">
                                    2
                                </span>

                                <span class="detail-item">
                                    20
                                </span>
                            }


                            @* ============================================================================================ *@

                            @*商品2*@

                            @* ============================================================================================ *@


                        </div>
                        </div>
                    }
                </div>

                <!-- 購物車 -->
                <div class="tab-pane fade" id="car-order" role="tabpanel" aria-labelledby="car-order">

                </div>

            </div>

        </div>
    </div>
</div>


@section topCSS{
    <link href="~/Assets/css/MemberCenter/reset.css" rel="stylesheet" />
    <link href="~/Assets/css/MemberCenter/member.css" rel="stylesheet" />
    <link href="~/Assets/css/MemberCenter/account.css" rel="stylesheet" />
    <link href="~/Assets/css/MemberCenter/order.css" rel="stylesheet" />
    <link href="~/Assets/css/MemberCenter/memberJS.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.3/css/all.css" integrity="sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk" crossorigin="anonymous">
    <link href="~/Assets/css/MemberCenter/ProfilePhoto.css" rel="stylesheet" />
}



@section endJS{

    <script src="~/Assets/js/MemberCenter/script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.9.3/dist/umd/popper.min.js" integrity="sha384-eMNCOe7tC1doHpGoWe/6oMVemdAVTMs2xqW4mwXrXsW0L84Iytr2wi5v2QjrP/xp" crossorigin="anonymous"></script>
    <script src="~/Assets/js/MemberCenter/ProfilePhoto.js"></script>
    <script>
        //編輯
        let personEditBtn = document.querySelector('.memberperson-button-edit');
        let emailEditBtn = document.querySelector('.memberemail-button-edit');
        let passwordEditBtn = document.querySelector('.memberpassword-button-edit');
        //取消編輯
        let personCancelEditBtn = document.querySelector('.memberperson-cancel-edit');
        let emailCancelEditBtn = document.querySelector('.memberemail-cancel-edit');
        let passwordCancelEditBtn = document.querySelector('.memberpassword-cancel-edit');

        //儲存
        let personSaveBtn = document.querySelector('.memberperson-button-save');
        let emailSaveBtn = document.querySelector('.memberemail-button-save');
        let passwordSaveBtn = document.querySelector('.memberpassword-button-save');

        //姓氏 //生日 //電話
        let personNameInp = document.querySelectorAll('.member-person-input');

        //生日value
        let changeYearContent = document.querySelector('.member-display-year');
        let changeMonthContext = document.querySelector('.member-display-month');
        let changeDateContext = document.querySelector('.member-display-date');

        //性別 暫

        //門市  暫

        //信箱
        let changeEmailDisplay = document.querySelectorAll('.member-changeEmail-item');
        let emailClear = document.querySelectorAll('.member-email-clear');

        //密碼
        let changePasswordDisplay = document.querySelectorAll('.member-changePassword-item');
        let passwordClear = document.querySelectorAll('.member-password-clear');

        //網頁載入初始化
        window.onload = function () {
            personCancelEditBtn.classList.add('notDisplay');
            emailCancelEditBtn.classList.add('notDisplay');
            passwordCancelEditBtn.classList.add('notDisplay');
            personSaveBtn.disabled = true;
            personSaveBtn.classList.add('buttonDisabled');
            emailSaveBtn.disabled = true;
            emailSaveBtn.classList.add('buttonDisabled');
            passwordSaveBtn.disabled = true;
            passwordSaveBtn.classList.add('buttonDisabled');
            inputInit();
            AccountInit();
            PasswordInit();

        };

        //初始化表格狀態
        function inputInit() {
            for (let i = 0; i < personNameInp.length; i++) {
                personNameInp[i].classList.add('inputDisabled');
            }
        }

        //初始化變更信箱欄
        function AccountInit() {
            for (let i = 0; i < changeEmailDisplay.length; i++) {
                changeEmailDisplay[i].classList.add('notDisplay');
            }
        }
        //顯示變更信箱
        function AccountDisplay() {
            for (let i = 0; i < changeEmailDisplay.length; i++) {
                changeEmailDisplay[i].classList.remove('notDisplay');
            }
        }

        //顯示變更信箱清除
        function EmailClear() {
            for (let i = 0; i < emailClear.length; i++) {
                emailClear[i].value = '';
            }
        }

        //初始化變更密碼欄
        function PasswordInit() {
            for (let i = 0; i < changePasswordDisplay.length; i++) {
                changePasswordDisplay[i].classList.add('notDisplay');
            }
        }
        //顯示變更密碼
        function PasswordDisplay() {
            for (let i = 0; i < changePasswordDisplay.length; i++) {
                changePasswordDisplay[i].classList.remove('notDisplay');
            }
        }

        //顯示變更密碼清除
        function PasswordClear() {
            for (let i = 0; i < passwordClear.length; i++) {
                passwordClear[i].value = '';
            }
        }


        //個資啟動修改
        personEditBtn.addEventListener('click', function () {
            for (let i = 0; i < personNameInp.length; i++) {
                personNameInp[i].classList.remove('inputDisabled');
            }
            //personEditBtn.disabled = true;
            personEditBtn.classList.add('notDisplay');
            personCancelEditBtn.classList.remove('notDisplay');
            personSaveBtn.disabled = false;
            personSaveBtn.classList.remove('buttonDisabled');
        });

        //取消個資修改
        personCancelEditBtn.addEventListener('click', function () {
            personEditBtn.classList.remove('notDisplay');
            personCancelEditBtn.classList.add('notDisplay');
            personSaveBtn.disabled = true;
            personSaveBtn.classList.add('buttonDisabled');
            inputInit();
        });
        //個資變更送出
        personSaveBtn.addEventListener('click', function () {
            inputInit();
            personEditBtn.disabled = false;
            personEditBtn.classList.remove('notDisplay');
            personCancelEditBtn.classList.add('notDisplay');
            personEditBtn.classList.remove('buttonDisabled');
            personSaveBtn.classList.add('buttonDisabled');
            swal("修改成功", '自動跳轉..', 'success');
        });


        //信箱啟動修改
        emailEditBtn.addEventListener('click', function () {
            emailCancelEditBtn.classList.remove('notDisplay');
            emailEditBtn.classList.add('notDisplay');
            emailSaveBtn.disabled = false;
            emailSaveBtn.classList.remove('buttonDisabled');
            AccountDisplay();
            EmailClear();
        });
        //取消信箱修改
        emailCancelEditBtn.addEventListener('click', function () {
            emailCancelEditBtn.classList.add('notDisplay');
            emailEditBtn.classList.remove('notDisplay');
            emailSaveBtn.disabled = true;
            emailSaveBtn.classList.add('buttonDisabled');
            AccountInit();
        });
        //信箱變更送出
        emailSaveBtn.addEventListener('click', function () {
            emailEditBtn.disabled = false;
            emailEditBtn.classList.remove('buttonDisabled');
            swal("修改成功", '自動跳轉..', 'success');
        });


        //密碼啟動修改
        passwordEditBtn.addEventListener('click', function () {
            passwordEditBtn.classList.add('notDisplay');
            passwordCancelEditBtn.classList.remove('notDisplay');
            passwordSaveBtn.disabled = false;
            passwordSaveBtn.classList.remove('buttonDisabled');
            PasswordDisplay();
            PasswordClear();
        });

        //取消密碼修改
        passwordCancelEditBtn.addEventListener('click', function () {
            passwordCancelEditBtn.classList.add('notDisplay');
            passwordEditBtn.classList.remove('notDisplay');
            passwordSaveBtn.disabled = true;
            passwordSaveBtn.classList.add('buttonDisabled');
            PasswordInit();
        });

        //密碼變更送出
        passwordSaveBtn.addEventListener('click', function () {
            PasswordInit();
            passwordCancelEditBtn.classList.add('notDisplay');
            passwordEditBtn.classList.remove('notDisplay');
            passwordSaveBtn.classList.add('buttonDisabled');
            swal("修改成功", '自動跳轉..', 'success');
        });
    </script>

}

@* 前端驗證 *@
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}

